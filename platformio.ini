; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:moteino8mhz]
platform = atmelavr
board = moteino8mhz
framework = arduino

;GPT-3.5 said to do this to see better memory footprint but it doesn't work
;build_unflags = -Os ; Disable optimization to see accurate memory usage
;build_flags = -Wl,--verbose ; Enable extended memory reporting

lib_deps = 
	electroniccats/MPU6050@^0.4.0
	mikem/RadioHead@^1.120
	bakercp/CRC32@^2.0.0

;GPT3.5 also said you can set flags this way but look at docs first
;upload_flags =
;    -Pusb ;Specifies the communication port to which the programmer is connected. In this case, it's using the USB port for communication.
;    -cavrisp ;Specifies the programmer type. "avrisp" is used for ISP (In-System Programming) programmers, which can directly connect to the microcontroller's programming interface.
;    -b19200 ;Specifies the baud rate
;    -U lfuse:w:0xE2:m -U hfuse:w:0xD9:m -U efuse:w:0xFF:m ;Specifies memory operation for fuse settings
	;Sets the low fuse byte to 0xE2 (in hexadecimal format). The low fuse byte contains various configuration options, such as the clock source, clock divider, and Brown-Out Detection (BOD) settings.
	;Sets the high fuse byte to 0xD9 (in hexadecimal format). The high fuse byte contains additional configuration options, such as Boot Loader Size and Boot Reset Vector.
	;Sets the extended fuse byte to 0xFF (in hexadecimal format). The extended fuse byte contains device-specific options, which can vary between different microcontroller models.


[env:moteino]
platform = atmelavr
board = moteino
framework = arduino
lib_deps = 
	electroniccats/MPU6050@^0.4.0
	mikem/RadioHead@^1.120
	bakercp/CRC32@^2.0.0
monitor_speed = 9600
